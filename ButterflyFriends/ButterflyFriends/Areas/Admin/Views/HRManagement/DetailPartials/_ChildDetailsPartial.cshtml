@model ButterflyFriends.Areas.Admin.Models.HRmanagementModels.ChildDetailsModel


@{
    var fullname = Model.Child.Fname + " " + Model.Child.Lname;
    var ModalId = Model.Child.Id + "c";
    var formId = "deleteChildShowForm";
}

<script type="x/template" id="@ModalId">
    <div class="modal-mask" v-on:click="close" v-show="show" transition="modal">
        <div class="modal-wrapper">
            <div class="modal-container" v-on:click.stop>

                <div class="modal-header">
                    <slot name="header">
                    </slot>
                </div>

                <div class="modal-body">
                    <slot name="body">
                    </slot>
                </div>

                <div class="modal-footer">
                    <slot name="footer">
                        <button class="modal-default-button btn-primary btn"
                                v-on:click="close">
                            OK <span class="glyphicon glyphicon-ok"></span>
                        </button>
                    </slot>
                </div>
            </div>
        </div>
    </div>
</script>

<div id="Box">

    <modal :show.sync="showModal">
        <h3 slot="header">
            
            @using (Ajax.BeginForm("showChildDelete", "HRManagement", new { id = Model.Child.Id, childrenPage = ViewBag.childrenPage }, new AjaxOptions
            {
            UpdateTargetId = "DeleteModal",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "GET",


            }, new { @class = "form-horizontal", id = formId }))
            {
            }
            <div class="row">
                <div calss="col-md-11" style="float: right">
                    <button class="btn btn-danger" onclick="submitForm()"><i class="fa fa-trash-o" aria-hidden="true"></i></button>

                </div>
                <div calss="col-md-1">
                    @fullname
                </div>
                <h5 id="roleError" class="text-danger" style="text-align: center;"></h5>


            </div>
        </h3>
        <h5 slot="body">
            <div id="profilePicture">
                @Html.Partial("UploadImagePartials/_ProfileImagePartial", Model.File)
            </div>
            <hr />
            <p>Profil informasjon</p>
            <dl class="dl-horizontal">
                <dt>
                    Fødselsdato:
                </dt>
                <dd>
                    @Model.Child.DoB.ToString("dd/MM/yyyy")
                </dd>
                @if (Model.Child.User != null)
                {
                    <dt>
                        Fadder:
                    </dt>
                    <dd>
                        @(Model.Child.User.Fname + " "+ Model.Child.User.Lname)
                    </dd>
                }
                @if (Model.Child.InactiveSince != null)
                {
                    <dt>
                        Tid siden sist aktiv:
                    </dt>
                    <dd>
                        @Convert.ToInt32(DateTime.Now.Subtract(Model.Child.InactiveSince.Value).TotalDays) dag(er)
                    </dd>
                }

            </dl>
            <hr />
            <p>Velg et nytt profilbilde</p>
            <input type="file" id="files" name="files[]" />
            <output id="output"></output>
        </h5>
    </modal>
</div>

<script>
                            Vue.component('modal', {
                                template: '#@ModalId',
                                props: {
                                    show: {
                                        type: Boolean,
                                        required: true,
                                        twoWay: true

                                    }
                                },
                                methods: {
                                    close: function() {
                                        this.show = false;
                                    }
                                },
                                ready: function () {
                                    this.show = true;
                                    document.addEventListener("keydown", (e) => {
                                        if (this.show && e.keyCode == 27) {

                                            this.close();
                                        }
                                        else if (this.show && e.keyCode == 13) {
                                            e.preventDefault();
                                            this.close();
                                        }


                                    });
                                }
                            });
    var vueChildDetails = new Vue({
                                el: '#Box',
                                data: {
                                    showModal: false
                                }
                            });

                            function handleFileSelect(evt) {
                                var files = evt.target.files; // FileList object

                                var output = document.getElementById("output");
                                while (output.firstChild) {
                                    output.removeChild(output.firstChild);
                                }

                                // Loop through the FileList and render image files as thumbnails.
                                for (var i = 0, f; f = files[i]; i++) {
                                    //f.num = i;

                                    // Only process image files.
                                    if (!f.type.match('image.*')) {
                                        continue;
                                    }

                                    var reader = new FileReader();

                                    // Closure to capture the file information.
                                    reader.onload = (function (theFile) {
                                        return function (e) {
                                            // Render thumbnail.
                                            var span = document.createElement('span');
                                            var id = "img"; //theFile.num;
                                            span.innerHTML = [
                                                '<img class="profileImageShow" id="', id, '" src="', e.target.result,
                                                '" title="', escape(theFile.name), '"/><btn id="', id + "b",
                                                '" class="btn btn-primary"><span class="glyphicon glyphicon-open"></span> Last opp</btn><br/><br/><div class="statustxt" id="', id + "t", '">0%</div><div class="progress"><div id="', id + 'p', '" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:0%"></div></div>'
                                            ].join('');
                                            document.getElementById('output').insertBefore(span, null);

                                            addHandeler(id);

                                        };
                                    })(f);

                                    // Read in the image file as a data URL.
                                    reader.readAsDataURL(f);
                                }
                            }

                            document.getElementById('files').addEventListener('change', handleFileSelect, false);

                            function addHandeler(id) {
                                $("#" + id + "b").on('click', function () {
                                    var fileUpload = $("#files").get(0);
                                    var files = fileUpload.files;
                                    if (files[0].type.match('image.*')) {
                                        sendFile(id);
                                    } else {
                                        alert("Du kan kun laste opp bilder");
                                    }
                                });
                            }

                            function sendFile(id) {



                                // Checking whether FormData is available in browser
                                if (window.FormData !== undefined) {

                                    var fileUpload = $("#files").get(0);
                                    var files = fileUpload.files;

                                    // Create FormData object
                                    var fileData = new FormData();

                                    // Looping over all files and add it to FormData object
                                    //there will only be one image, but let's just loop over just incase we want to expand the code in the future
                                    for (var i = 0; i < files.length; i++) {
                                        fileData.append(files[i].name, files[i]);
                                    }
                                    fileData.append('userid', "@Model.Child.Id");
                                    fileData.append('type', "@Model.File.Type");
                                    $.ajax({
                                        url: '/Admin/HRManagement/ProfilePictureUpload',
                                        type: "POST",
                                        contentType: false, // Not to set any content header
                                        processData: false, // Not to process data
                                        data: fileData,
                                        xhr: function () {  // Custom XMLHttpRequest
                                            var myXhr = $.ajaxSettings.xhr();
                                            if (myXhr.upload) { // Check if upload property exists

                                                // For handling the progress of the upload
                                                myXhr.upload.id = id;
                                                myXhr.upload.addEventListener('progress', progressHandlingFunction, false);

                                            }
                                            return myXhr;
                                        }
                                        ,
                                        success: function (result) {
                                            $('#' + id + "t").text("Profilbildet ble suksessfullt lastet opp");
                                            $("#profilePicture").html(result);


                                        },
                                        error: function (err) {
                                            $('#' + id + "t").text(err.statusText);
                                        }
                                    });
                                } else {
                                    alert("FormData er ikke støttet.");
                                }
                            }

                            function progressHandlingFunction(e) {
                                var id = e.target.id;
                                if (e.lengthComputable) {
                                    var percentage = Math.floor((e.loaded / e.total) * 100);
                                    //update progressbar percent complete
                                    $('#' + id + "t").text(percentage + '%');
                                    $('#' + id + "p").css("width", percentage + '%');
                                }
                            }
                            function submitForm() {
                                    $("form#@formId").submit();

                            }
</script>
