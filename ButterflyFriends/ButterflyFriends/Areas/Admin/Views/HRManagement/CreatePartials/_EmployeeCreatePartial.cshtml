@using ButterflyFriends.Areas.Admin.Controllers
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@model RegisterViewModel



@{
    ViewBag.render = "false";
    var k = false;
}

<div id="app">


    <modal :show.sync="showModal">
        <h3 slot="header">Register bruker</h3>
        <h3 slot="header">@ViewBag.Message</h3>
        <h5 slot="body">



            @using (Ajax.BeginForm("CreateEmployee", "HRManagement",new {page = ViewBag.page}, new AjaxOptions
            {
                UpdateTargetId = "updateEmployees",
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "POST",

            }, new { @class = "form-horizontal", role = "form", id = "formId" }))
            {
                @Html.AntiForgeryToken()
                
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Fname, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Fname, new { @class = "form-control", id = "Fname", required = "required" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Lname, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Lname, new { @class = "form-control", id = "Lname", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.StreetAdress, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.StreetAdress, new { @class = "form-control", id = "StreetAdress", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control", id = "City", required = "required" })
                        </div>
                    </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PostCode, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control", id = "PostCode", required = "required" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control", id = "State", required = "required" })
                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", id = "Phone", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "Email", required = "required" })
                        </div>
                    </div>
                    @*
    var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
    ApplicationUser userr = userManager.FindByIdAsync(User.Identity.GetUserId()).Result;
    var roleNr = userr.roleNr;
    HRManagementController HR = new HRManagementController();

    <div class="form-group">
        @Html.LabelFor(m => m.UserRole, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <select name="UserRole" class="form-control">
                @for (int i = 1; i < roleNr; i++)
                {
                    <option value=@HR.ResolveUserRole(i)>@HR.ResolveUserRole(i)</option>
                }
            </select>
        </div>
    </div>
                    *@
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", Id = "Password", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "ConfirmPassword", required = "required" })
                        </div>
                    </div>
            }


        </h5>
    </modal>
</div>

<script type="x/template" id="ModalId">
    <div class="modal-mask" v-on:click="close" v-show="show" transition="modal">
        <div class="modal-wrapper">
            <div class="modal-container" style="width:650px;" v-on:click.stop>

                <div class="modal-header">
                    <slot name="header">
                    </slot>
                </div>

                <div class="modal-body">
                    <slot name="body">

                    </slot>

                </div>

                <div class="modal-footer">
                    <slot name="footer">
                        <button class="modal-default-button btn-primary btn" id="knapp" v-on:click="closeButton">
                            Registrer <span class="glyphicon glyphicon-list-alt">
                        </button>
                    </slot>
                </div>
            </div>
        </div>
    </div>
</script>


<script>

    Vue.component('modal', {
        template: '#ModalId',
        props: {
            show: {
                type: Boolean,
                required: true,
                twoWay: true

            }
        },
        methods: {
            close: function() {
                this.show = false;
                //this.clearFields();
                $(".loader-mask").hide();
            },
            closeButton: function () {
                 //if ($("form#formId").valid()) {
                     $("form#formId").submit();
                     $(".loader-mask").hide();
                    this.show = false;
                    //this.clearFields();
                    //this.checkBox();
                 //}
            },
            showMethod: function() {
                this.showModal = true;
            },
            clearFields: function () {
                $("#firstName").val("");
                $("#lastName").val("");
                $("#Address").val("");
                $("#zipCode").val("");
                $("#City").val("");
                $("#Email").val("");
                $("#Phone").val("");
                $("#Password").val("");
                $("#ConfirmPassword").val("");

            },
            checkBox: function () {


            $('#checkbox1').prop('checked', true);


            }
        },
        ready: function() {
            this.show = true;
            document.addEventListener("keydown", (e) => {
                if (this.show && e.keyCode == 27) {
                    this.close();
                    e.preventDefault();
                }
                else if (this.show && e.keyCode == 13) {
                    this.closeButton();
                }

            });

        },
    });
    new Vue({
        el: '#app',
        data: {
            showModal: false,
            showForm: false
        }
    });
</script>
